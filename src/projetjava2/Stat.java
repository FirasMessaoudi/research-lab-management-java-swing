/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetjava2;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Scofield
 */
public class Stat extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public static boolean c1=true,c2=true,c3=true,c4=true,c5=true,c6=true;
    Connection con; 
    Statement stmt;
    ResultSet rs;
    public Stat() {
        initComponents();
         DoConnect();
        
    }
    private void DoConnect(){
        try{
           Class.forName("com.mysql.jdbc.Driver");
       Connection conn=null;
       
 String url="jdbc:mysql://localhost:3306/laboratoire"; 
 con=DriverManager.getConnection(url,"root","");
 stmt = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
    
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        list1 = new java.awt.List();
        jButton2 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(760, 510));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Generation des statistiques");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(177, 0, 325, 29);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Type de statistique :");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 87, 140, 17);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selectionner", "Nombre Total de chercheur", "Nombre de chercheur par type", "Nombre de production", "Nombre De Production par type", "Nombre de soutenance par type", "Classement des chercheurs par Nombre de production", " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(10, 139, 198, 30);

        list1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list1ActionPerformed(evt);
            }
        });
        getContentPane().add(list1);
        list1.setBounds(250, 40, 510, 456);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetjava2/images/printer (3).png"))); // NOI18N
        jButton2.setText("Imprimer les Stat");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(20, 230, 171, 40);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetjava2/images/stat.png"))); // NOI18N
        jLabel16.setText("jLabel16");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(0, 0, 760, 510);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Menu");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Se deconnecter");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
         try{
        switch(jComboBox1.getSelectedIndex()){
            case 1:{
                PreparedStatement s=con.prepareStatement("select count(*) AS NB from chercheur");
                rs=s.executeQuery();
                rs.next();
                int nb=rs.getInt("NB");
                if(c1){
                list1.add("Le nombre Total des chercheurs est "+String.valueOf(nb));
                c1=false;}
                break;
                
            }
            case 2:{
                PreparedStatement s=con.prepareStatement("select count(*) AS nbm from etmastere ");
                 PreparedStatement s1=con.prepareStatement("select count(*) AS nbd from doctorant ");
                  PreparedStatement s2=con.prepareStatement("select count(*) AS nbe from enseignant ");
                rs=s.executeQuery();
                rs.next();
                int nbm=rs.getInt("nbm");
                rs=s1.executeQuery();
                rs.next();
                 int nbd=rs.getInt("nbd");
                 rs=s2.executeQuery();
                rs.next();
                  int nbe=rs.getInt("nbe");
                   if(c2){
                   list1.add("Le nombre des etudiant en mastere est "+String.valueOf(nbm));
                   list1.add("Le nombre d'enseignant est "+String.valueOf(nbe));
                   list1.add("Le nombre de doctorant est "+String.valueOf(nbd));
                   c2=false;}
                   
                break;
            }
           
             case 3:{
                PreparedStatement s=con.prepareStatement("select count(*) AS NB from production");
                rs=s.executeQuery();
                rs.next();
                int nb=rs.getInt("NB");
                  if(c3){
                  list1.add("Le nombre de production est "+String.valueOf(nb));
                  c3=false;}
                break;
            }
             case 4:{
                PreparedStatement s=con.prepareStatement("select count(*) AS NB from brevet");
                PreparedStatement s1=con.prepareStatement("select count(*) AS NB from communication");
                PreparedStatement s2=con.prepareStatement("select count(*) AS NB from article");
                PreparedStatement s3=con.prepareStatement("select count(*) AS NB from chapitre");
                PreparedStatement s4=con.prepareStatement("select count(*) AS NB from livre");
                
                rs=s.executeQuery();
                rs.next();
                int nbb=rs.getInt("NB");
                
                rs=s1.executeQuery();
                rs.next();
                int nbc=rs.getInt("NB");
                
                rs=s2.executeQuery();
                rs.next();
                int nba=rs.getInt("NB");
                
                rs=s3.executeQuery();
                rs.next();
                int nbch=rs.getInt("NB");
                
                rs=s4.executeQuery();
                rs.next();
                int nbl=rs.getInt("NB");
                
                
                
                    
                    if(c4){
                    list1.add("Le nombre de brevet est "+String.valueOf(nbb));
                   list1.add("Le nombre de communication est "+String.valueOf(nbc));
                    list1.add("Le nombre d'article est "+String.valueOf(nba));
                    list1.add("Le nombre de chapitre est "+String.valueOf(nbch));
                     list1.add("Le nombre de livre est "+String.valueOf(nbl));
                     c4=false;}
                   
                   
                break;
            }
              
            case 6:{
                 PreparedStatement s=con.prepareStatement("select distinct( c.nom),c.prenom,count(pc.cin) AS NB from chercheur c,prodchercheur pc where c.cin=pc.cin group by pc.cin order by count(pc.cin) desc");
                 rs=s.executeQuery();
                 if(c6){
                 list1.add("--------------------------Classement des chercheurs par nombre de production-------------------------------------");
                 while(rs.next()){
                int nb=rs.getInt("NB");
                 String nom=rs.getString(("nom"));
                 String pren=rs.getString("prenom");
                
                 list1.add(nom+" "+pren+" a "+nb+" production(s)");
                 }
                 list1.add("------------------------------------------------------------------------------------------------------------------------");
                 c6=false;
                 }break;
                
            }
            case 5:{
                PreparedStatement  s=con.prepareStatement("select count(*) AS NBm from soutenance where type=?");
                PreparedStatement s1=con.prepareStatement("select count(*) AS NBd from soutenance where type=?");
                PreparedStatement s2=con.prepareStatement("select count(*) AS NBh from soutenance where type=?");
                s.setString(1, "Mastere");
                s1.setString(1, "These");
                s2.setString(1, "Habilitation");
                
                 rs=s.executeQuery();
                rs.next();
                int nbm=rs.getInt("NBm");
                rs=s1.executeQuery();
                rs.next();
                 int nbd=rs.getInt("NBd");
                 rs=s2.executeQuery();
                rs.next();
                  int nbh=rs.getInt("NBh");
                  
                 
                  if(c5){
                  list1.add("Le nombre de soutenance mastere est "+nbm);
                  list1.add("Le nombre de soutenance du these est "+nbd);
                  list1.add("Le nombre de soutenance d'habilitation est "+nbh);
                  c5=false;}
                  break;
                
            }
                
            default:
                 JOptionPane.showMessageDialog(null,"Choix incorrecte");
        }
        }catch(SQLException e){
              JOptionPane.showMessageDialog(null,e.getMessage());
        }
        catch(Exception e){
             JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            PrintWriter p=new PrintWriter(new FileWriter("stat.txt"));
            p.println("------------------STATISTIQUES DU LABO------------------------------\n\n");
        
            for(int i=0;i<list1.getItemCount();i++)
                p.println(list1.getItem(i));
           JOptionPane.showMessageDialog(null,"impression avec succes");
           p.close();
                    
                    
        }catch(IOException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
           // TODO add your handling code here:
        this.setVisible(false);
        new PrevChercheur().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        this.setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void list1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_list1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private java.awt.List list1;
    // End of variables declaration//GEN-END:variables
}
