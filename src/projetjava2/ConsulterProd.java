package projetjava2;

import java.awt.Desktop;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author K3NWAY
 */
public class ConsulterProd extends javax.swing.JFrame {

    /**
     * Creates new form ConsulterProd
     */
     Connection con=null;
     Statement stmt;
         ResultSet rs;
         
         public java.sql.Date DatetoSql(java.util.Date date) {
    return new java.sql.Date(date.getTime());
}
         
         public void fillTablePst(PreparedStatement s1,String st,DefaultTableModel Model){
             
        
               Object[] objects=null;
            try{
               rs=s1.executeQuery(st);
              java.sql.ResultSetMetaData rsmd = rs.getMetaData();
                int colNo = rsmd.getColumnCount();
                while(rs.next())                    {
               objects = new Object[colNo];
                for(int i=0;i<colNo;i++){
                objects[i]=rs.getObject(i+1);
                 
                                         }
                Model.addRow(objects);
                }
              
        
            }catch(SQLException e){
                   JOptionPane.showMessageDialog(null, e.getMessage());
                        }
        
            }
         public void fillTable(Statement s1,String st,DefaultTableModel Model){
             
        
               Object[] objects=null;
            try{
               rs=s1.executeQuery(st);
              java.sql.ResultSetMetaData rsmd = rs.getMetaData();
                int colNo = rsmd.getColumnCount();
                while(rs.next())                    {
               objects = new Object[colNo];
                for(int i=0;i<colNo;i++){
                objects[i]=rs.getObject(i+1);
                 
                                         }
                Model.addRow(objects);
                }
              
        
            }catch(SQLException e){
                   JOptionPane.showMessageDialog(null, e.getMessage());
                        }
        
            }

    private void DoConnect(){
        try{
           Class.forName("com.mysql.jdbc.Driver");
      
       
 String url="jdbc:mysql://localhost:3306/laboratoire"; 
 con=DriverManager.getConnection(url,"root","");
 stmt = con.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );
  //Connection conn=null;
 JOptionPane.showMessageDialog(null, "Succes");
   
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    public ConsulterProd() {
        
        initComponents();
       DoConnect();
        if(((jchkcodeCherch.isSelected()==false)&&(JchkMotCle.isSelected()==false) &&(jchkNomProd.isSelected()==false) &&(jchkNomProd.isSelected()==false)&&(jchkDateProd.isSelected()==false))){
         
        jtxtMotcle.setEnabled(false);
        jtxtNomProd.setEnabled(false);
       jtxtcodeCh.setEnabled(false);
      JcombotypeProd.setEnabled(false);
        jtxtMotcle.setEnabled(false);
        JCalCmbProd.setEnabled(false);
        
        /* jtxtMotcle.setEnabled(false);
        jtxtNomProd.setVisible(false);
        jtxtNomcherch.setVisible(false);
        JcombotypeProd.setVisible(false);
       */}
       
       
       
       
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jtabbedPaneResult = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jtxtNomProd = new javax.swing.JTextField();
        jchkNomProd = new javax.swing.JCheckBox();
        JchkMotCle = new javax.swing.JCheckBox();
        JcombotypeProd = new javax.swing.JComboBox<>();
        jchkcodeCherch = new javax.swing.JCheckBox();
        jtxtcodeCh = new javax.swing.JTextField();
        jtxtMotcle = new javax.swing.JTextField();
        jchkProdtype = new javax.swing.JCheckBox();
        JCalCmbProd = new org.freixas.jcalendar.JCalendarCombo();
        jchkDateProd = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtableResult = new javax.swing.JTable();
        jlblResultType = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 26), new java.awt.Dimension(0, 26), new java.awt.Dimension(32767, 26));
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jchkNomProd.setText("<html><b>Nom Du Production");
        jchkNomProd.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jchkNomProdStateChanged(evt);
            }
        });
        jchkNomProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkNomProdActionPerformed(evt);
            }
        });
        jchkNomProd.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jchkNomProdPropertyChange(evt);
            }
        });

        JchkMotCle.setText("<html><b> Mot Cl√©");
        JchkMotCle.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                JchkMotCleStateChanged(evt);
            }
        });
        JchkMotCle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JchkMotCleActionPerformed(evt);
            }
        });

        JcombotypeProd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choisir Un element", "Brevet", "Article", "Communication", "Chapitre", "Livre" }));
        JcombotypeProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcombotypeProdActionPerformed(evt);
            }
        });

        jchkcodeCherch.setText("<html><b>Code de chercheur");
        jchkcodeCherch.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jchkcodeCherchStateChanged(evt);
            }
        });
        jchkcodeCherch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkcodeCherchActionPerformed(evt);
            }
        });

        jtxtcodeCh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcodeChKeyPressed(evt);
            }
        });

        jchkProdtype.setText("<html><b> Type De Production");
        jchkProdtype.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jchkProdtypeStateChanged(evt);
            }
        });
        jchkProdtype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkProdtypeActionPerformed(evt);
            }
        });

        JCalCmbProd.addDateListener(new org.freixas.jcalendar.DateListener() {
            public void dateChanged(org.freixas.jcalendar.DateEvent evt) {
                JCalCmbProdDateChanged(evt);
            }
        });
        JCalCmbProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCalCmbProdActionPerformed(evt);
            }
        });

        jchkDateProd.setText("<html> <b> Date De Production");
        jchkDateProd.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jchkDateProdStateChanged(evt);
            }
        });
        jchkDateProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkDateProdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jchkcodeCherch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JchkMotCle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jchkNomProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jchkDateProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JCalCmbProd, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(jtxtcodeCh)
                            .addComponent(jtxtNomProd)
                            .addComponent(jtxtMotcle)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jchkProdtype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(JcombotypeProd, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(397, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jchkNomProd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtNomProd, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtcodeCh, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jchkcodeCherch))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCalCmbProd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jchkDateProd, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JcombotypeProd, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jchkProdtype, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtMotcle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JchkMotCle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jtabbedPaneResult.addTab("Consulter Une Production", jPanel2);

        jtableResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtableResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtableResultMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(jtableResult);

        jlblResultType.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jlblResultType.setText("<html><b><center> Result</center></b></html>");
        jlblResultType.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlblResultType.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(jlblResultType, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblResultType, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jtabbedPaneResult.addTab("Resultat", jPanel8);

        jButton1.setText("<html><b>Consulter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<html><b>Retour");

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Menu");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Se deconnecter");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtabbedPaneResult, javax.swing.GroupLayout.PREFERRED_SIZE, 734, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(397, 397, 397))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtabbedPaneResult)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jchkNomProdPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jchkNomProdPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkNomProdPropertyChange

    private void jchkcodeCherchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkcodeCherchActionPerformed
        // TODO add your handling code here:
       /*  if (jchkNomcherch.isSelected()){
                jtxtNomcherch.setVisible(true);
            }
             if(!jchkNomcherch.isSelected()){
                jtxtNomcherch.setVisible(false);
            }*/
    }//GEN-LAST:event_jchkcodeCherchActionPerformed

    private void JchkMotCleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JchkMotCleActionPerformed
        // TODO add your handling code here:
           /* if (JchkMotCle.isSelected()){
                jtxtMotcle.setVisible(true);
            }
            if(JchkMotCle.isSelected()==false){
                jtxtMotcle.setVisible(false);
            }*/
    }//GEN-LAST:event_JchkMotCleActionPerformed

    
    
    private void jchkNomProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkNomProdActionPerformed
        // TODO add your handling code here:
     /* if (jchkNomProd.isSelected()){
                jtxtNomProd.setVisible(true);
            }
          if(jchkNomProd.isSelected()==false){
                jtxtNomProd.setVisible(false);
            }*/
          
          


    }//GEN-LAST:event_jchkNomProdActionPerformed

    private void JcombotypeProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcombotypeProdActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_JcombotypeProdActionPerformed

    private void jchkProdtypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkProdtypeActionPerformed
        // TODO add your handling code here:
     /*    if (jchkProdtype.isSelected()){
                JcombotypeProd.setVisible(true);
            }
           if(jchkProdtype.isSelected()==false){
                JcombotypeProd.setVisible(false);
            }*/
    }//GEN-LAST:event_jchkProdtypeActionPerformed

    private void jchkNomProdStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jchkNomProdStateChanged
        // TODO add your handling code here:
                  jchkNomProd.addItemListener((ItemEvent e) -> {
              if(e.getStateChange() == ItemEvent.SELECTED){
                  jtxtNomProd.setEnabled(true);
               //   textField.setText("Enabled");
              }
              else if(e.getStateChange() == ItemEvent.DESELECTED){
                  jtxtNomProd.setEnabled(false);
               //   textField.setText("Disabled");
              }
              
              validate();
              repaint();
        });
    }//GEN-LAST:event_jchkNomProdStateChanged

    private void jchkcodeCherchStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jchkcodeCherchStateChanged
        // TODO add your handling code here:
        
                  jchkcodeCherch.addItemListener((ItemEvent e) -> {
              if(e.getStateChange() == ItemEvent.SELECTED){
                  jtxtcodeCh.setEnabled(true);
               //   textField.setText("Enabled");
              }
              else if(e.getStateChange() == ItemEvent.DESELECTED){
                  jtxtcodeCh.setEnabled(false);
               //   textField.setText("Disabled");
              }
              
              validate();
              repaint();
        });
    }//GEN-LAST:event_jchkcodeCherchStateChanged

    private void jchkProdtypeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jchkProdtypeStateChanged
        // TODO add your handling code here:
        
             jchkProdtype.addItemListener((ItemEvent e) -> {
              if(e.getStateChange() == ItemEvent.SELECTED){
                  JcombotypeProd.setEnabled(true);
               //   textField.setText("Enabled");
              }
              else if(e.getStateChange() == ItemEvent.DESELECTED){
                  JcombotypeProd.setEnabled(false);
               //   textField.setText("Disabled");
              }
              
              validate();
              repaint();
        });
        
        
    }//GEN-LAST:event_jchkProdtypeStateChanged

    private void JchkMotCleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_JchkMotCleStateChanged
        // TODO add your handling code here:
        
         JchkMotCle.addItemListener((ItemEvent e) -> {
              if(e.getStateChange() == ItemEvent.SELECTED){
                  jtxtMotcle.setEnabled(true);
               //   textField.setText("Enabled");
              }
              else if(e.getStateChange() == ItemEvent.DESELECTED){
                  jtxtMotcle.setEnabled(false);
               //   textField.setText("Disabled");
              }
              
              validate();
              repaint();
        });
    }//GEN-LAST:event_JchkMotCleStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel aModel = (DefaultTableModel) jtableResult.getModel();
        aModel.setRowCount(0);
        String[] tableColumnsName = {"Date De Publication","Titre","Chemin","Auteur(s)"}; 
         Statement s1;
         ResultSet rs;
        aModel.setColumnIdentifiers(tableColumnsName);
          jtabbedPaneResult.setVisible(true);
          PreparedStatement s;
          Boolean BcodeCh=jchkcodeCherch.isSelected();
          Boolean BnomPr=jchkNomProd.isSelected();
          Boolean BTypePr=jchkProdtype.isSelected();
          Boolean BMotCl=JchkMotCle.isSelected();
          Boolean BDatePr=jchkDateProd.isSelected();
        String  nomPr=jtxtNomProd.getText();
          String CodeCh=jtxtcodeCh.getText();
          String TypePr=JcombotypeProd.getSelectedItem().toString();
          String MotCl=jtxtMotcle.getText();
          Date DatePr=JCalCmbProd.getDate();
          
        try{
          if(((jchkcodeCherch.isSelected()==false)&&(JchkMotCle.isSelected()==false) &&(jchkNomProd.isSelected()==false) &&(jchkProdtype.isSelected()==false)&&(jchkDateProd.isSelected()==false))){
          String st="SELECT p.datepub,p.titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c where pc.titre=p.titre and c.cin=pc.cin";
               s1=con.createStatement();
          
              
                fillTable(s1, st, aModel);
                    jtableResult.setModel(aModel); //DONE
     
        } if(!BcodeCh&&BnomPr&&!BDatePr&&!BTypePr&&!BMotCl){//1
            // String st="SELECT p.datepub,p.Titre,p.file,pc.cin  FROM PRODUCTION p,prodchercheur pc where p.Titre='"+jtxtNomProd.getText()+"'and p.Titre=pc.titre;";
            if(!nomPr.isEmpty()){
            String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c where p.Titre='"+nomPr+"'and p.Titre=pc.titre and c.cin=pc.cin;";
               s1=con.createStatement();
          
                fillTable(s1, st, aModel);
                                                    
                    jtableResult.setModel(aModel); //DONE
                    
                    
            }else 
                JOptionPane.showMessageDialog(null,"Champs Nom Production Vide");
       
        } if(BcodeCh&&!BnomPr&&!BDatePr&&!BTypePr&&!BMotCl){//2
            if(!CodeCh.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c where pc.cin='"+CodeCh+"'and p.Titre=pc.titre and c.cin=pc.cin;";
               s1=con.createStatement();
                fillTable(s1, st, aModel);
                    jtableResult.setModel(aModel); 
               }
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code Vide");
            
            } if (!BcodeCh&&!BnomPr&&BDatePr&&!BTypePr&&!BMotCl){//3
             String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c where p.datepub='"+DatetoSql(DatePr)+"'and p.Titre=pc.titre and pc.cin=c.cin;";
               s1=con.createStatement();
             fillTable(s1, st, aModel);
                  jtableResult.setModel(aModel);
             /* rs=s1.executeQuery(st);
              java.sql.ResultSetMetaData rsmd = rs.getMetaData();
                int colNo = rsmd.getColumnCount();
                while(rs.next())                    {
                Object[] objects = new Object[colNo];
                for(int i=0;i<colNo;i++){
                objects[i]=rs.getObject(i+1);
                                         }
                    aModel.addRow(objects);
                                                    }*/
           
        } if(!BcodeCh&&!BnomPr&&!BnomPr&&BTypePr&&!BMotCl){//4
             if(TypePr.equals("Choisir Un element")){
                 JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                 
                 /*
                 Brevet
        Article
            Communication
        Chapitre
        Livre
                 */
            }else if(TypePr.equals("Brevet")){
                String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,Brevet b where p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
               s1=con.createStatement();
            fillTable(s1, st, aModel);
                jlblResultType.setText(TypePr+"s");
            }else if(TypePr.equals("Article")){
                   String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,Article a where p.Titre=a.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                  fillTable(s1, st, aModel);
            }else if(TypePr.equals("Communication")){
                 String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,communication com where p.Titre=com.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                    
            }else if(TypePr.equals("Chapitre")){
                 String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,chapitre chap where p.Titre=chap.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);  
            }else if(TypePr.equals("Livre")){
                 String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,livre l where p.Titre=l.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                    fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel); 
            }
               
        } if (!BcodeCh&&!BDatePr&&!BnomPr&&!BTypePr&&BMotCl){//5
            if(!MotCl.isEmpty()){
                 String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c where p.motcle LIKE '%"+MotCl+"%' and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
            }else 
                JOptionPane.showMessageDialog(null,"Champs MotCl√© Vide");
        } if(BnomPr&&BcodeCh&&!BDatePr&&!BTypePr&&!BMotCl){//1 et 2
            
            if(!CodeCh.isEmpty()&&!nomPr.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c where pc.cin='"+CodeCh+"'and p.Titre='"+nomPr+"'and p.titre=pc.titre and c.cin=pc.cin;";
               s1=con.createStatement();
               fillTable(s1, st, aModel);
              jtableResult.setModel(aModel);}
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code et Nom Production sont Vide"); 
            
        } if (BnomPr&&!BcodeCh&&BDatePr&&!BTypePr&&!BMotCl){//1 et 3
             /*DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();*/
            if(!nomPr.isEmpty()) {
            
            String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c where p.datepub='"+DatetoSql(DatePr)+"'and p.Titre='"+nomPr+"'and p.Titre=pc.titre and pc.cin=c.cin;";
               s1=con.createStatement();
             fillTable(s1, st, aModel);
                  jtableResult.setModel(aModel);}
            else{
                JOptionPane.showMessageDialog(null,"Nom Production Vide");
            }
        } if (BnomPr&&!BcodeCh&&!BDatePr&&BTypePr&&!BMotCl){ //1 et 4
              if(nomPr.isEmpty()){
                  
                 JOptionPane.showMessageDialog(null,"Veuillez Remplir Le nom de Production");
              }
              if(TypePr.equals("Choisir Un element")){
                 JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                 
                
            }else if(TypePr.equals("Brevet")){
                String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,Brevet b where p.Titre='"+nomPr+ "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
               s1=con.createStatement();
            fillTable(s1, st, aModel);
                jlblResultType.setText(TypePr+"s");
            }else if(TypePr.equals("Article")){
                   String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,Article a where p.Titre='"+nomPr+ "'and p.Titre=a.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                  fillTable(s1, st, aModel);
            }else if(TypePr.equals("Communication")){
                 String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,communication com where p.Titre='"+nomPr+ "'and p.Titre=com.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                    
            }else if(TypePr.equals("Chapitre")){
                 String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,chapitre chap where p.Titre='"+nomPr+ "'and p.Titre=chap.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);  
            }else if(TypePr.equals("Livre")){
                 String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,livre l where p.Titre='"+nomPr+ "'and p.Titre=l.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                    fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel); 
            }
            
        } if(BnomPr&&!BcodeCh&&!BDatePr&&!BTypePr&&BMotCl){ //1et 5
            
                 String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c where p.motcle LIKE '%"+MotCl+"%' and p.Titre='"+nomPr+"'and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
        } if(!BnomPr&&BcodeCh&&BDatePr&&!BTypePr&&!BMotCl){ //2 et 3
           if(!CodeCh.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) FROM PRODUCTION p,prodchercheur pc,chercheur c where pc.cin='"+CodeCh+"'and p.datepub='"+DatetoSql(DatePr)+"'and p.Titre=pc.titre and c.cin=pc.cin;";
               s1=con.createStatement();
               
               fillTable(s1, st, aModel);
                    jtableResult.setModel(aModel);}
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code Vide");
        } if(!BnomPr&&BcodeCh&&!BDatePr&&BTypePr&&!BMotCl){ //2 et 4
             if(!CodeCh.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                if(TypePr.equals("Choisir Un element"))
                 JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                else if(TypePr.equals("Brevet")){
                     String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,Brevet b where pc.cin='"+CodeCh+ "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }   else if(TypePr.equals("Article")){
                   String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,article a where pc.cin='"+CodeCh+ "'and p.Titre=a.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                } else if(TypePr.equals("Communication")){
                       String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,communication com where pc.cin='"+CodeCh+ "'and p.Titre=com.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }else if(TypePr.equals("Chapitre")){
                    
                
                   
                  String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,chapitre chap where pc.cin='"+CodeCh+ "'and p.Titre=chap.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel); }
               
               }
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code Vide");
        } if(!BnomPr&&BcodeCh&&!BDatePr&&!BTypePr&&BMotCl){ //2 et 5
             if(!CodeCh.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
              String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c where pc.cin='"+CodeCh+"'and p.motcle='"+MotCl+"'and p.Titre=pc.titre and c.cin=pc.cin;";
               s1=con.createStatement();
          
               fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);}
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }
             else JOptionPane.showMessageDialog(null,"Champs cin Vide");
        } if(!BnomPr&&!BcodeCh&&BDatePr&&BTypePr&&!BMotCl){ //3 et 4
             if(TypePr.equals("Choisir Un element"))
                 JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                else if(TypePr.equals("Brevet")){
                     String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,Brevet b where p.datepub='"+DatetoSql(DatePr)+ "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }   else if(TypePr.equals("Article")){
                   String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,article a where p.datepub='"+DatetoSql(DatePr)+ "'and p.Titre=a.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                } else if(TypePr.equals("Communication")){
                       String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,communication com where p.datepub='"+DatetoSql(DatePr)+"'and p.Titre=com.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }else if(TypePr.equals("Chapitre")){
                    
                
                   
                  String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,chapitre chap where p.datepub='"+DatetoSql(DatePr)+ "'and p.Titre=chap.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel); }
                      
        } if(!BnomPr&&!BcodeCh&&BDatePr&&!BTypePr&&BMotCl){ //3 et 5
            String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) FROM PRODUCTION p,prodchercheur pc,chercheur c where p.datepub='"+DatetoSql(DatePr)+"'and p.motcle='"+MotCl+"'and p.Titre=pc.titre and c.cin=pc.cin;";
               s1=con.createStatement();
          
               fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
        } if(!BnomPr&&!BcodeCh&&!BDatePr&&BTypePr&&BMotCl){ //4 et 5
            if(TypePr.equals("Choisir Un element"))
                 JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                else if(TypePr.equals("Brevet")){
                     String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,Brevet b where p.motcle='"+MotCl+ "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }   else if(TypePr.equals("Article")){
                   String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,article a where p.motcle='"+MotCl+ "'and p.Titre=a.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                } else if(TypePr.equals("Communication")){
                       String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,communication com where p.motcle='"+MotCl+"'and p.Titre=com.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }else if(TypePr.equals("Chapitre")){
                    
                
                   
                  String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,chapitre chap where p.motcle='"+MotCl+ "'and p.Titre=chap.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel); }
        } if (BnomPr&&BcodeCh&&BDatePr&&!BTypePr&&!BMotCl){ //1 et 2 et 3 
             if(!CodeCh.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) "
                        + " FROM PRODUCTION p,prodchercheur pc,chercheur c "
                        + "where pc.cin='"+CodeCh+
                        "'and p.titre='"+nomPr+"'"
                        + "and datepub= '"+DatetoSql(DatePr)+"'and p.Titre=pc.titre and c.cin=pc.cin; ";
                        
               s1=con.createStatement();
          
                fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
               
               }
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code Vide");
        } if(BnomPr&&BcodeCh&&!BDatePr&&BTypePr&&!BMotCl){ //1 et 2 et 4
             if(!CodeCh.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                   
                   if(TypePr.equals("Choisir Un element"))
                 JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                else if(TypePr.equals("Brevet")){
                     String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,Brevet b where p.Titre='"+ nomPr+"'+ and pc.cin='"+CodeCh+ "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }   else if(TypePr.equals("Article")){
                   String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,article a where p.Titre='"+ nomPr+"'+ and pc.cin='"+CodeCh+  "'and p.Titre=a.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                } else if(TypePr.equals("Communication")){
                       String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,communication com where p.Titre='"+ nomPr+"'+ and pc.cin='"+CodeCh+  "'and p.Titre=com.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }else if(TypePr.equals("Chapitre")){
                    
                
                   
                  String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,chapitre chap where p.Titre='"+ nomPr+"'+ and pc.cin='"+CodeCh+ "'and p.Titre=chap.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     s1=con.createStatement();
                     fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel); }}
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code Vide");
        } if(BnomPr&&BcodeCh&&!BDatePr&&!BTypePr&&BMotCl){//1 et 2 et 5
             if(!CodeCh.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                   
               String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) "
                        + "FROM PRODUCTION p,prodchercheur pc,chercheur c "
                        + "where c.cin='"+CodeCh+"'"
                       + "and p.Titre='"+nomPr
                        + "'and p.motcle LIKE '%"+MotCl+"%' "
                       + "and p.Titre=pc.titre "
                       + "and c.cin=pc.cin;";
                       
               s1=con.createStatement();
          
               fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);}
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code Vide");
        } if(BnomPr&&!BcodeCh&&BDatePr&&!BTypePr&&BMotCl){ //1 et 3 et 5
            if(!nomPr.isEmpty()&&!MotCl.isEmpty()){
                 String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) "
                        + "FROM PRODUCTION p,prodchercheur pc,chercheur c "
                        + "where p.datepub='"+DatetoSql(DatePr)+"'"
                       + "and p.Titre='"+nomPr
                        + "'and p.motcle LIKE '%"+MotCl+"%' "
                       + "and p.Titre=pc.titre "
                       + "and c.cin=pc.cin;";
                       
               s1=con.createStatement();
          
               fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
            }else JOptionPane.showMessageDialog(null,"Champs sont vides");
        } if(BnomPr&&!BcodeCh&&BDatePr&&BTypePr&&!BMotCl){ //1 et 3 et 4
        
         String st="";
                   if(TypePr.equals("Choisir Un element"))
                 JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                else if(TypePr.equals("Brevet")){
                      st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,Brevet b where p.Titre='"+ nomPr+"'+ and p.datepub='"+DatetoSql(DatePr)+ "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                    
                }   else if(TypePr.equals("article")){
                     st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,article a where p.Titre='"+ nomPr+"'+ and p.datepub='"+DatetoSql(DatePr)+ "'and p.Titre=a.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                    
                } else if(TypePr.equals("communication")){
                     st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,communication com where p.Titre='"+ nomPr+"'+ and p.datepub='"+DatetoSql(DatePr)+ "'and p.Titre=com.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                    
                }else if(TypePr.equals("chapitre")){
                     st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,chapitre chap where p.Titre='"+ nomPr+"'+ and p.datepub='"+DatetoSql(DatePr)+ "'and p.Titre=chap.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                    
                }
                   
                   
                 s1=con.createStatement();
                fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
        }
         if(BnomPr&&!BcodeCh&&!BDatePr&&BTypePr&&BMotCl){ //1 et 4 et 5
                
             String st="";
                   if(TypePr.equals("Choisir Un element"))
                 JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                 else if(TypePr.equals("Brevet")){
                      st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,Brevet b where p.Titre='"+ nomPr+"'+ and p.motcle='"+MotCl+ "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                    
                }   else if(TypePr.equals("article")){
                     st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,article a where p.Titre='"+ nomPr+"'+ and p.motcle='"+MotCl+ "'and p.Titre=a.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                    
                } else if(TypePr.equals("communication")){
                     st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,communication com where p.Titre='"+ nomPr+"'+ and p.motcle='"+MotCl+ "'and p.Titre=com.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                    
                }else if(TypePr.equals("chapitre")){
                     st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  FROM PRODUCTION p,prodchercheur pc,chercheur c,chapitre chap where p.Titre='"+ nomPr+"'+ and p.motcle='"+MotCl+ "'and p.Titre=chap.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                    
                }
                   
                   
                 s1=con.createStatement();
                fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
         
         }
         if(!BnomPr&&BcodeCh&&BDatePr&&BTypePr&&!BMotCl){  //2 et 3 et 4
             if(!CodeCh.isEmpty()) //NOT DONE YET
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                   String st;
                    switch (TypePr) {
                        
                        case "Choisir Un element":
                            JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                            break;
                        case "Brevet":
                             st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) "
                                 + " FROM PRODUCTION p,prodchercheur pc,chercheur c,Brevet b "
                                 + "where pc.cin='"+CodeCh+
                                    "'and p.datepub='"+DatetoSql(DatePr)+
                                    "'and b.titre=p.Titre"
                                    + " and p.Titre=pc.titre;";
                         s1=con.createStatement();
                        fillTable(s1, st, aModel);
                        jtableResult.setModel(aModel);
                            break;
                        case "Article":
                            
                             st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) "
                                 + " FROM PRODUCTION p,prodchercheur pc,chercheur c,Article b "
                                 + "where pc.cin='"+CodeCh+
                                    "'and p.datepub='"+DatetoSql(DatePr)+
                                    "'and b.titre=p.Titre"
                                    + " and p.Titre=pc.titre;";
                         s1=con.createStatement();
                        fillTable(s1, st, aModel);
                        jtableResult.setModel(aModel);
                            break;
                        case "Communication":
                          
                             st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) "
                                 + " FROM PRODUCTION p,prodchercheur pc,chercheur c,communication b "
                                 + "where pc.cin='"+CodeCh+
                                    "'and p.datepub='"+DatetoSql(DatePr)+
                                    "'and b.titre=p.Titre"
                                    + " and p.Titre=pc.titre;";
                         s1=con.createStatement();
                        fillTable(s1, st, aModel);
                        jtableResult.setModel(aModel);
                         
                            break;
                        case "Chapitre":
                            
                             st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) "
                                 + " FROM PRODUCTION p,prodchercheur pc,chercheur c,chapitre b "
                                 + "where pc.cin='"+CodeCh+
                                    "'and p.datepub='"+DatetoSql(DatePr)+
                                    "'and b.titre=p.Titre"
                                    + " and p.Titre=pc.titre;";
                         s1=con.createStatement();
                        fillTable(s1, st, aModel);
                        jtableResult.setModel(aModel);
                         
                            break;
                            case"Livre":
                                st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) "
                                 + " FROM PRODUCTION p,prodchercheur pc,chercheur c,livre b "
                                 + "where pc.cin='"+CodeCh+
                                    "'and p.datepub='"+DatetoSql(DatePr)+
                                    "'and b.titre=p.Titre"
                                    + " and p.Titre=pc.titre;";
                         s1=con.createStatement();
                        fillTable(s1, st, aModel);
                        jtableResult.setModel(aModel);
                                break;
                        default:
                            break;
                    }
                         
               
               }
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code Vide");
        } if(!BnomPr&&BcodeCh&&BDatePr&&!BTypePr&&BMotCl){ //2 3 5
             if(!CodeCh.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                   
                 String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) "
                        + "FROM PRODUCTION p,prodchercheur pc,chercheur c "
                        + "where p.datepub='"+DatetoSql(DatePr)+"'"
                       + "and p.cin='"+CodeCh
                        + "'and p.motcle LIKE '%"+MotCl+"%' "
                       + "and p.Titre=pc.titre "
                       + "and c.cin=pc.cin;";
                 
                 s1=con.createStatement();
          
               fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);}
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code Vide");
        } if(!BnomPr&&!BcodeCh&&BDatePr&&BTypePr&&BMotCl){//3 4 5
            
            
             switch (TypePr) {
                        case "Choisir Un element":
                            JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                            break;
                    /*   s1=con.createStatement();
                    fillTable(s1, st, aModel);
                    jtableResult.setModel(aModel);*/
                        case "Brevet":
                            {
                                String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,brevet b,chercheur c"
                                        + " where  p.motcle='"+MotCl+"'and datepub='"+DatetoSql(DatePr)+"'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                               
                                s1=con.createStatement();
                                fillTable(s1, st, aModel);
                                jtableResult.setModel(aModel);
                                break;
                            }
                        case "Article":
                            {
                                String    st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,article a,chercheur c"
                                        + " where p.motcle='"+MotCl+"'"
                                        + "and datepub='"+DatetoSql(DatePr)+"'and p.Titre=a.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                                s1=con.createStatement();
                                fillTable(s1, st, aModel);
                                jtableResult.setModel(aModel);
                                break;
                            }
                        case "Communication":
                            {
                                String   st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,communication b,chercheur c"
                                         + " where p.motcle='"+MotCl+"'"
                                        + "and datepub='"+DatetoSql(DatePr)+"'and b.titre=p.titre and p.Titre=pc.titre and c.cin=pc.cin;";
                                s1=con.createStatement();
                                fillTable(s1, st, aModel);
                                jtableResult.setModel(aModel);
                                break;
                            }
                        case "Chapitre":
                            {
                                String   st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,chapitre b,chercheur c"
                                         + " where p.motcle='"+MotCl+"'"
                                        + "and datepub='"+DatetoSql(DatePr)+"'and b.titre=p.titre and p.Titre=pc.titre and c.cin=pc.cin;";
                                s1=con.createStatement();
                                fillTable(s1, st, aModel);
                                jtableResult.setModel(aModel);
                                break;
                            }
                            case "Livre":
                            
                             String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) "
                                 + " FROM PRODUCTION p,prodchercheur pc,chercheur c,Livre b "
                                 + "where pc.cin='"+CodeCh+
                                    "'and p.datepub='"+DatetoSql(DatePr)+
                                    "'and b.titre=p.Titre"
                                    + " and p.Titre=pc.titre;";
                         s1=con.createStatement();
                        fillTable(s1, st, aModel);
                        jtableResult.setModel(aModel);
                         
                            break;
                        default:
                            break;
                            
                            
                    }
            
            
            
        } if(BnomPr&&BcodeCh&&BDatePr&&BTypePr&&!BMotCl){ //1 2 3 4
             if(!CodeCh.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                    //   String st="";
                    switch (TypePr) {
                        case "Choisir Un element":
                            JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                            break;
                    /*   s1=con.createStatement();
                    fillTable(s1, st, aModel);
                    jtableResult.setModel(aModel);*/
                        case "Brevet":
                            {
                                String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,brevet b,chercheur c"
                                        + " where pc.cin='"+CodeCh+"'and p.Titre='"+nomPr+"'and datepub='"+DatetoSql(DatePr)+"'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                                /*   String st2="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                + "FROM PRODUCTION p,prodchercheur pc,brevet b,chercheur c"
                                + " where pc.cin='00000000'and p.Titre='Jamaica'"
                                + "and datepub='2000-05-05' and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";*/
                                s1=con.createStatement();
                                fillTable(s1, st, aModel);
                                jtableResult.setModel(aModel);
                                break;
                            }
                        case "Article":
                            {
                                String    st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,article a,chercheur c"
                                        + " where pc.cin='"+CodeCh+"'and p.Titre='"+nomPr+"'"
                                        + "and datepub='"+DatetoSql(DatePr)+"'and p.Titre=a.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                                s1=con.createStatement();
                                fillTable(s1, st, aModel);
                                jtableResult.setModel(aModel);
                                break;
                            }
                        case "Communication":
                            {
                                String   st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,communication b,chercheur c"
                                        + " where pc.cin='"+CodeCh+"'and p.Titre='"+nomPr+"'"
                                        + "and datepub='"+DatetoSql(DatePr)+"'and b.titre=p.titre and p.Titre=pc.titre and c.cin=pc.cin;";
                                s1=con.createStatement();
                                fillTable(s1, st, aModel);
                                jtableResult.setModel(aModel);
                                break;
                            }
                        case "Chapitre":
                            {
                                String   st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,chapitre b,chercheur c"
                                        + " where pc.cin='"+CodeCh+"'and p.Titre='"+nomPr+"'"
                                        + "and datepub='"+DatetoSql(DatePr)+"'and b.titre=p.titre and p.Titre=pc.titre and c.cin=pc.cin;";
                                s1=con.createStatement();
                                fillTable(s1, st, aModel);
                                jtableResult.setModel(aModel);
                                break;
                            }
                            case"Livre":
                               String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,Livre b,chercheur c"
                                        + " where pc.cin='"+CodeCh+"'and p.Titre='"+nomPr+"'"
                                        + "and datepub='"+DatetoSql(DatePr)+"'and b.titre=p.titre and p.Titre=pc.titre and c.cin=pc.cin;";
                                s1=con.createStatement();
                                fillTable(s1, st, aModel);
                                jtableResult.setModel(aModel);
                                break;
                        default:
                            break;
                    }
               }
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code Vide");
        } if(BnomPr&&BcodeCh&&!BDatePr&&BTypePr&&BMotCl){ //1 2 3 5           non to 1245
             if(!CodeCh.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
              String st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom) "
                        + "FROM PRODUCTION p,prodchercheur pc,chercheur c "
                       + "where p.datepub='"+DatetoSql(DatePr)+"'"
                       + "where p.Titre='"+nomPr
                        + "'and p.motcle LIKE '%"+MotCl+"%' "
                       + "and pc.cin='"+CodeCh+"'"
                      + "and p.Titre=pc.titre "
                       + "and c.cin=pc.cin;";
                        s1=con.createStatement();
          
              fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
               }
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code Vide");
        } if(BnomPr&&!BcodeCh&&BDatePr&&BTypePr&&BMotCl){ //1 3 4 5 // DONE //
             String st="";
              switch (TypePr) {
                  case "Choisir Un element":
                      JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                      break;
                  case "Brevet":
                      
                      st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,brevet b,chercheur c"
                                        + " where p.motcle='"+MotCl+"'and p.Titre='"+nomPr+"'and datepub='"+DatetoSql(DatePr)+"'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                                /*   String st2="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                + "FROM PRODUCTION p,prodchercheur pc,brevet b,chercheur c"
                                + " where pc.cin='00000000'and p.Titre='Jamaica'"
                                + "and datepub='2000-05-05' and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";*/
                                
                      
                      break;
                  case "Article":
                       st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,Article b,chercheur c"
                                        + " where p.motcle='"+MotCl+"'and p.Titre='"+nomPr+"'and datepub='"+DatetoSql(DatePr)+"'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                        break;
                  case "Communication":
                       st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,communication b,chercheur c"
                                        + " where p.motcle='"+MotCl+"'and p.Titre='"+nomPr+"'and datepub='"+DatetoSql(DatePr)+"'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                        break;
                  case "Chapitre":
                      st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,chapitre b,chercheur c"
                                        + " where p.motcle='"+MotCl+"'and p.Titre='"+nomPr+"'and datepub='"+DatetoSql(DatePr)+"'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                        break;
                        case "Livre":
                      st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,livre b,chercheur c"
                                        + " where p.motcle='"+MotCl+"'and p.Titre='"+nomPr+"'and datepub='"+DatetoSql(DatePr)+"'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                        break;
                  default:
                      break;
              }
                   
                   
                 s1=con.createStatement();
                fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                      
                      
        } if(BnomPr&&BcodeCh&&!BDatePr&&BTypePr&&BMotCl){ //1 2 4 5 
             if(!CodeCh.isEmpty()) //DONE
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                
                 String st="";
                   if(TypePr.equals("Choisir Un element"))
                 JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                else if(TypePr.equals("Brevet")){
                      st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,brevet b,chercheur c"
                                        + " where pc.cin='"+CodeCh+"' and p.Titre='"+nomPr 
                              +     "'+ and p.motcle='"+MotCl+"'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     JOptionPane.showMessageDialog(null, st);
                }   else if(TypePr.equals("Article")){
                      st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,article b,chercheur c"
                                        + " where pc.cin='"+CodeCh+"'and p.Titre='"+nomPr+"' and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     
                } else if(TypePr.equals("Communication")){
                     st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,communication b,chercheur c"
                                        + " where pc.cin='"+CodeCh+"'and p.Titre='"+nomPr+"'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     
                }else if(TypePr.equals("Chapitre")){
                      st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,chapitre b,chercheur c"
                                        + " where pc.cin='"+CodeCh+"'and p.Titre='"+nomPr+"'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     
                }else if(TypePr.equals("Livre")){
                      st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,Livre b,chercheur c"
                                        + " where pc.cin='"+CodeCh+"'and p.Titre='"+nomPr+"' and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                     
                }
                   
                   
                 s1=con.createStatement();
                fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);}
               else JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Vides");
        } 
        
        if(BnomPr&&BcodeCh&&BDatePr&&BTypePr&&BMotCl){ // 1 2 3 4 5
             if(!CodeCh.isEmpty())
            { 
                Boolean b=true; int k=0;
               while(k<CodeCh.length()&&b==true){
               if(!Character.isDigit(CodeCh.charAt(k))||(CodeCh.length()!=8)){
                   b=false;
                   
               }else k++;    
               }
               if(b==true){
                 String st = null;
                   if(TypePr.equals("Choisir Un element"))
                 JOptionPane.showMessageDialog(null,"Veuillez Choisir Un type de Production");
                else if(TypePr.equals("Brevet")){
                    
                    st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,brevet b,chercheur c"
                                        + " where pc.cin='"+CodeCh
                                        + "'and p.Titre='"+nomPr
                                      + "'and p.datepub='"+DatetoSql(DatePr)
                                         +"'and p.motcle='"+MotCl+
                                           "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                   
                  /* PreparedStatement s2=con.prepareStatement("SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)"
                           + " FROM PRODUCTION p,prodchercheur pc,brevet b,chercheur c "
                           + " here pc.cin=? and and p.Titre=? and"
                           
                   );*/
                       System.out.println(st);
                               s1=con.createStatement();
                fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }   else if(TypePr.equals("Article")){
                      st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,Article b,chercheur c"
                                        + " where pc.cin='"+CodeCh
                                        + "'and p.Titre='"+nomPr
                                      + "'and datepub='"+DatetoSql(DatePr)
                                         +"'and p.motcle='"+MotCl+
                                           "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                      s1=con.createStatement();
                fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                } else if(TypePr.equals("Communication")){
                    st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,Communication b,chercheur c"
                                        + " where pc.cin='"+CodeCh
                                        + "'and p.Titre='"+nomPr
                                      + "'and datepub='"+DatetoSql(DatePr)
                                         +"'and p.motcle='"+MotCl+
                                           "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                    s1=con.createStatement();
                fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }else if(TypePr.equals("Chapitre")){
                       st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,Chapitre b,chercheur c"
                                        + " where pc.cin='"+CodeCh
                                        + "'and p.Titre='"+nomPr
                                      + "'and datepub='"+DatetoSql(DatePr)
                                         +"'and p.motcle='"+MotCl+
                                           "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                       s1=con.createStatement();
                fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }else if(TypePr.equals("Livre")){
                       st="SELECT p.datepub,p.Titre,p.file,concat(c.nom,' ',c.prenom)  "
                                        + "FROM PRODUCTION p,prodchercheur pc,Livre b,chercheur c"
                                        + " where pc.cin='"+CodeCh
                                        + "'and p.Titre='"+nomPr
                                      + "'and datepub='"+DatetoSql(DatePr)
                                         +"'and p.motcle='"+MotCl+
                                           "'and p.Titre=b.titre and p.Titre=pc.titre and pc.cin=c.cin;";
                       s1=con.createStatement();
                fillTable(s1, st, aModel);
                      jtableResult.setModel(aModel);
                }
                 
               }
             /*  else if(TypePr.equals("Choisir Un element"))
                   JOptionPane.showMessageDialog(null,"Veuillez Choisir Un Type De Prod");*/
               else    JOptionPane.showMessageDialog(null,"Cin invalide");
             }else 
                JOptionPane.showMessageDialog(null,"Champs Code Vide");
        }
        }
        catch(SQLException e){
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jchkDateProdStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jchkDateProdStateChanged
        // TODO add your handling code here:
        
          jchkDateProd.addItemListener((ItemEvent e) -> {
              if(e.getStateChange() == ItemEvent.SELECTED){
                  JCalCmbProd.setEnabled(true);
               //   textField.setText("Enabled");
              }
              else if(e.getStateChange() == ItemEvent.DESELECTED){
                  JCalCmbProd.setEnabled(false);
               //   textField.setText("Disabled");
              }
              
              validate();
              repaint();
        });
    }//GEN-LAST:event_jchkDateProdStateChanged

    private void jchkDateProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkDateProdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkDateProdActionPerformed

    private void jtableResultMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableResultMousePressed
        // TODO add your handling code here:
        
        jtableResult.addMouseListener(new java.awt.event.MouseAdapter() {
    @Override
    public void mouseClicked(java.awt.event.MouseEvent evt) {
         int i=0;
        int row = jtableResult.rowAtPoint(evt.getPoint());
        int col = jtableResult.columnAtPoint(evt.getPoint());
        if (row >= 0 && col == 2) {
           
        String o1="";
        o1= (String)jtableResult.getValueAt(row, col) ;
        
       if(!o1.isEmpty())
            try {
              File o=new File(o1);
                Desktop.getDesktop().open(o);
             
                //  Runtime.getRuntime().exec(new String[] {"cmd.exe", "/C", o1});
               i++;
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
        else{
            return;
        }
    }
});
    }//GEN-LAST:event_jtableResultMousePressed

    private void jtxtcodeChKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcodeChKeyPressed
        // TODO add your handling code here:
        
 
        
        
/*jtxtcodeCh.setInputVerifier(new InputVerifier() {
    @Override
    public boolean verify(JComponent input) {
        String text = ((JTextField) input).getText();
        if (text.matches("[0-9]+") && text.length() > 2) // Reads: "Any digit one or more times"
            JOptionPane.showMessageDialog(null,"Number");
        return true;
    }
    
    
});*/
           
    }//GEN-LAST:event_jtxtcodeChKeyPressed

    private void JCalCmbProdDateChanged(org.freixas.jcalendar.DateEvent evt) {//GEN-FIRST:event_JCalCmbProdDateChanged
        // TODO add your handling code here:
         DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        if(JCalCmbProd.getDate().after(date)){
            JOptionPane.showMessageDialog(null,"Date Invalide");
            JCalCmbProd.setDate(date);
        }
    }//GEN-LAST:event_JCalCmbProdDateChanged

    private void JCalCmbProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCalCmbProdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCalCmbProdActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        new PrevChercheur().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsulterProd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsulterProd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsulterProd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsulterProd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsulterProd().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.freixas.jcalendar.JCalendarCombo JCalCmbProd;
    private javax.swing.JCheckBox JchkMotCle;
    private javax.swing.JComboBox<String> JcombotypeProd;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JCheckBox jchkDateProd;
    private javax.swing.JCheckBox jchkNomProd;
    private javax.swing.JCheckBox jchkProdtype;
    private javax.swing.JCheckBox jchkcodeCherch;
    private javax.swing.JLabel jlblResultType;
    private javax.swing.JTabbedPane jtabbedPaneResult;
    private javax.swing.JTable jtableResult;
    private javax.swing.JTextField jtxtMotcle;
    private javax.swing.JTextField jtxtNomProd;
    private javax.swing.JTextField jtxtcodeCh;
    // End of variables declaration//GEN-END:variables
}
